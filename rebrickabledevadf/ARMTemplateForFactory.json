{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "rebrickabledevadf"
		},
		"Rebrickable_AKV_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://rebrickabledevakv.vault.azure.net/"
		},
		"Rebrickable_Config_LS_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://rebrickabledevadlsgen2.table.core.windows.net/"
		},
		"Rebrickable_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rebrickabledevadlsgen2.dfs.core.windows.net/"
		},
		"Rebrickable_Website_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cdn.rebrickable.com/media/downloads/"
		},
		"Users_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://rebrickable.com/api/v3/users/',linkedService().user_token,'/')}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Lego')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data for each file from Config table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Select the config table values",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Select the config table values').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Lego_Zipped_file_DS",
											"type": "DatasetReference",
											"parameters": {
												"Filename": {
													"value": "@concat(item().Filename, '.csv.gz')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Lego_Binary_DS",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@concat(item().Filename, '.csv' )",
													"type": "Expression"
												},
												"DatasetName": {
													"value": "@item().DatasetName",
													"type": "Expression"
												},
												"SourceName": {
													"value": "@item().SourceName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Select the config table values",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": "SourceName eq 'LEGO'",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "Rebrickable_Config_DS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Send message on failure",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy data for each file from Config table",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-55.northeurope.logic.azure.com:443/workflows/19604fffe70544c79d68ce5208a74e2a/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=vQyauRZ3s7bQ4F-xlKOO6aYuEK7nxaW36WQGXXzblE4",
							"body": {
								"value": "{\n    \"message\" : \"This is a custom dynamic message from your pipeline with run ID @{pipeline().RunId}.\",\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"pipelineName\" : \"@{pipeline().Pipeline}\", \n    \"receiver\" : \"@{variables('reciever')}\"\n   }",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"reciever": {
						"type": "String",
						"defaultValue": "agnieszka.a.kowalczyk-bartkowiak@gsk.com"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Rebrickable_Config_DS')]",
				"[concat(variables('factoryId'), '/datasets/Lego_Zipped_file_DS')]",
				"[concat(variables('factoryId'), '/datasets/Lego_Binary_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get User password from Azure Key Vault",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://rebrickabledevakv.vault.azure.net/secrets/Rebrickable-User-Password?api-version=7.4",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net/"
							}
						}
					},
					{
						"name": "Get user token",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get API key from Azure Key Vault",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "@concat('key ',activity('Get API key from Azure Key Vault').output.value)",
									"type": "Expression"
								},
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://rebrickable.com/api/v3/users/_token/",
							"body": {
								"value": "username=agaka1993&password=@{activity('Get User password from Azure Key Vault').output.value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get API key from Azure Key Vault",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get User password from Azure Key Vault",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://rebrickabledevakv.vault.azure.net/secrets/Rebrickable-API-Key?api-version=7.4",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net/"
							}
						}
					},
					{
						"name": "Select the config table values",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get user token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": "SourceName eq 'Users'",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "Rebrickable_Config_DS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Select the config table values",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Select the config table values').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Users Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:01.000",
											"requestMethod": "GET",
											"additionalHeaders": {
												"Authorization": {
													"value": "@concat('key ', activity('Get API key from Azure Key Vault').output.value)",
													"type": "Expression"
												}
											},
											"paginationRules": {
												"AbsoluteUrl": "$.next",
												"EndCondition:$.next": "Const:null"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Users_REST_DS",
											"type": "DatasetReference",
											"parameters": {
												"user_token": {
													"value": "@activity('Get user token').output.user_token",
													"type": "Expression"
												},
												"entityname": {
													"value": "@concat(item().Filename, '/')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Users_JSON_DS",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@concat(item().Filename, '.json')",
													"type": "Expression"
												},
												"DatasetName": {
													"value": "@item().DatasetName",
													"type": "Expression"
												},
												"SourceName": {
													"value": "@item().SourceName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Send message on failure",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-55.northeurope.logic.azure.com:443/workflows/19604fffe70544c79d68ce5208a74e2a/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=vQyauRZ3s7bQ4F-xlKOO6aYuEK7nxaW36WQGXXzblE4",
							"body": {
								"value": "{\n    \"message\" : \"This is a custom dynamic message from your pipeline with run ID @{pipeline().RunId}.\",\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"pipelineName\" : \"@{pipeline().Pipeline}\", \n    \"receiver\" : \"@{variables('reciever')}\"\n   }",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"reciever": {
						"type": "String",
						"defaultValue": "agnieszka.a.kowalczyk-bartkowiak@gsk.com"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Rebrickable_Config_DS')]",
				"[concat(variables('factoryId'), '/datasets/Users_REST_DS')]",
				"[concat(variables('factoryId'), '/datasets/Users_JSON_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_Binary_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Rebrickable_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"DatasetName": {
						"type": "string"
					},
					"SourceName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Rebrickable/', \n        dataset().SourceName,\n        '/', \n        dataset().DatasetName,\n        '/',\n        formatDateTime(utcnow(),'yyyy'), \n        '/', \n        formatDateTime(utcnow(), 'MM'), \n        '/', \n        formatDateTime(utcnow(),'dd'))",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Rebrickable_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Lego_Zipped_file_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Rebrickable_Website_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().Filename",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "gzip"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Rebrickable_Website_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable_Config_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Rebrickable_Config_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"schema": [],
				"typeProperties": {
					"tableName": "RebrickableConfig"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Rebrickable_Config_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Users_JSON_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Rebrickable_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"DatasetName": {
						"type": "string"
					},
					"SourceName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('Rebrickable/', \n        dataset().SourceName,\n        '/', \n        dataset().DatasetName,\n        '/',\n        formatDateTime(utcnow(),'yyyy'), \n        '/', \n        formatDateTime(utcnow(), 'MM'), \n        '/', \n        formatDateTime(utcnow(),'dd'))",
							"type": "Expression"
						},
						"fileSystem": "raw"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Rebrickable_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Users_REST_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Users_LS",
					"type": "LinkedServiceReference",
					"parameters": {
						"user_token": {
							"value": "@dataset().user_token",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"user_token": {
						"type": "string"
					},
					"entityname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().entityname",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Users_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable_AKV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('Rebrickable_AKV_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable_Config_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('Rebrickable_Config_LS_properties_typeProperties_serviceEndpoint')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Rebrickable_LS_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rebrickable_Website_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('Rebrickable_Website_LS_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Users_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"user_token": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Users_LS_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Refresh the Lego and Users data')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Users",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Lego",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-12-29T17:34:00",
						"timeZone": "W. Europe Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Users')]",
				"[concat(variables('factoryId'), '/pipelines/Lego')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		}
	]
}